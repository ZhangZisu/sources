#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#define MAXN 4010
#define MAXM 200010
int r, c, d, s, t;
inline int getA(int x, int y) { return ((x - 1) * c + y) << 1; }
inline int getB(int x, int y) { return getA(x, y) | 1; }
int head[MAXN], cur[MAXN], to[MAXM], next[MAXM], cap[MAXM], tot = 0;
inline void $(int u, int v, int w) {
    next[tot] = head[u], to[tot] = v, cap[tot] = w, head[u] = tot++;
    next[tot] = head[v], to[tot] = u, cap[tot] = 0, head[v] = tot++;
    // printf("%d->%d\n", u, v);
}
inline int dist(int x0, int y0, int x1, int y1) { return (x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1); }
int map[210][210];
int level[MAXN], Q[MAXN];
inline int BFS() {
    memset(level, 0, sizeof(level));
    memcpy(cur, head, sizeof(cur));
    register int H = 0, T = 0;
    level[Q[0] = s] = 1;
    while (H <= T) {
        int x = Q[H++];
        for (int i = head[x]; ~i; i = next[i]) {
            if (!level[to[i]] && cap[i]) {
                level[to[i]] = level[x] + 1;
                Q[++T] = to[i];
            }
        }
    }
    return level[t];
}
inline int DFS(int x, int flow) {
    if (x == t || !flow) return flow;
    int ret = 0, tmp;
    for (int &i = cur[x]; ~i; i = next[i]) {
        if (level[to[i]] == level[x] + 1 && cap[i]) {
            tmp = DFS(to[i], std::min(flow, cap[i]));
            ret += tmp;
            cap[i] -= tmp;
            cap[i ^ 1] += tmp;
            flow -= tmp;
            if (!flow) return ret;
        }
    }
    return ret;
}
inline int Dinic() {
    int ans = 0;
    while (BFS()) ans += DFS(s, 0x3F3F3F3F);
    return ans;
}
int fk = 0;
int main() {
    scanf("%d%d%d", &r, &c, &d);
    s = 0;
    t = (r * c + 1) << 1;
    memset(head, -1, sizeof(head));
    for (int i = 1; i <= r; i++)
        for (int j = 1; j <= c; j++)
            scanf("%1d", &map[i][j]);
    for (int i = 1; i <= r; i++) {
        for (int j = 1; j <= c; j++) {
            if (!map[i][j]) continue;
            $(getA(i, j), getB(i, j), map[i][j]);
            if (std::min(std::min(i, r - i + 1), std::min(j, c - j + 1)) <= d)
                $(getB(i, j), t, 0x3F3F3F3F);
            for (int _i = 1; _i <= r; _i++) {
                for (int _j = 1; _j <= c; _j++) {
                    if (!map[_i][_j]) continue;
                    if (dist(i, j, _i, _j) > d * d) continue;
                    $(getB(i, j), getA(_i, _j), 0x3F3F3F3F);
                }
            }
        }
    }
    register char ch;
    for (int i = 1; i <= r; i++) {
        for (int j = 1; j <= c; j++) {
            ch = getchar();
            while (ch != '.' && ch != 'L') ch = getchar();
            if (ch == '.') continue;
            $(s, getA(i, j), 1);
            fk++;
        }
    }
    // puts("CGC!!!CGC!!!");
    printf("%d\n", fk - Dinic());
    return 0;
}

//                       .,,,,,,-,..               ..........
//                    .-;=#@@@@@@@$;-       .,-:;!*===$$$==**!!;~-,..
//                   .-*#@@@@@@@@@@$!-....-:;!*=$=*!;::::::;!!***!;:-... . . ,--~-~--,.
//                  .-!#@@@@@@@@@@@@#=!;;!*==*!;~-,,..    ....,-~:;!*!:-.. .:*$$###$==!-.
//                  ,!#@@@@@@@@@@@@@@@#$=*!;~-,.                 .,:!==!~,,!=@@@@@@@@@@*~..                   ......
//                  ,=@@@@@@@@@@@@@@@@@=;,.....                .. ..,~;*=*!#@@@@@@@@@@@@=~.              ..,-~::::::-,
//                  ~#@@@@@@@@@@@@@@@@=:,.                         . .,~*=$@@@@@@@@@@@@@#!-           .-~:;*==####$$=;~,
//                 .:#@@@@@@@@@@@@@@@$~. ...                       .   .~:*#@@@@@@@@@@@@@$!,       ..-;=#@@@@@@@@@@@@#=;,
//                 .!@@@@@@@@@@@@@@@#;,   .                        .  ....-!#@@@@@@@@@@@@@=~      -:*$@@@@@@@@@@@@@@@@@$:.
//                 .!@@@@@@@@@@@@@@=:,.   .                           .   .-!#@@@@@@@@@@@@#:..   -!$@@@@@@@@@@@@@@@@@@@@=-
//                 .*@@@@@@@@@@@@@$;, .                                 .   ~=@@@@@@@@@@@@@;.   .!$@@@@@@@@@@@@@@@@@@@@@$-
//                 .*@@@@@@@@@@@@#;,                                    .   ,!#@@@@@@@@@@@@*,  .~$@@@@@@@@@@@@@@@@@@@@@@$-
//                 .*@@@@@@@@@@@@*-. ..  .                              .   .:$@@@@@@@@@@@@=,  ,!@@@@@@@@@@@@@@@@@@@@@@@#~
//                 .!@@@@@@@@@@@$:.                                          ,!#@@@@@@@@@@@=-  -=@@@@@@@@@@@@@@@@@@@@@@@@:
//                 .;@@@@@@@@@@$!, .                                         .~=@@@@@@@@@@@=-  -$@@@@@@@@@@@@@@@@@@@@@@@@!-
//                 .~#@@@@@@@@@*,. . .                                        ,!@@@@@@@@@@@=- .-=@@@@@@@@@@@@@@@@@@@@@@@@=:
//                ..,*@@@@@@@@$:.                                             .~=@@@@@@@@@@=,  ,*@@@@@@@@@@@@@@@@@@@@@@@@$*
//                   ;#@@@@@@#!,.                                              ,;#@@@@@@@@@*,  ,*@@@@@@@@@@@@@@@@@@@@@@@@@$
//                   ~*#@@@@@=~ .       ..                       .             .-*@@@@@@@@$:.   :#@@@@@@@@@@@@@@@@@@@@@@@@@
//             .     .~*@@@@#;.        .-:::~~~-,.......   .,---~:~~-,.         .;#@@@@@@@=-   .:#@@@@@@@@@@@@@@@@@@@@@@@@@
//               .   .,:=@@@$:         .::!=##=*~,,,--~-..,~!!*==*!;::--.        -=@@@@@@=:.  ,;=#@@@@@@@@@@@@@@@@@@@@@@@@@
//                     .-!$#*-         .~:;=#@@$*!:--:;;:;!*#@@$*;~~,-~:~,.      ,*@@@@#!~,.,:=$@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                    ...,~*;.         .;*$==$#@#$*;;:;!!=$#@@##*!!;:~~~~~-      .;#@##*-..-!$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                      ..~;~.         .!#=:,:$@@@$=;--:;*#@@@!:~;$@@@==!:-       -$#*;- .~*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                       .~~-.          -!;~,,!#@@=*:. .-:*=#=~, ,*@#$=*;~,       .*=~,. ~=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                       ,::.             -;;!*==*!~,    ,~;**;:~~;!;~-,,..       .!=~.,~=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$
//                       ~*~.             .~;!;;;;~,       ,~;!**!;:.              ;*:.-=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#!
//                      .!=-              ..--,,,-,         .,-~~~--.              ~*!;*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*
//                      ~=!,                     ..              .                 -*==@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*
//                      ;=:.                   ..                                  -=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;
//                   ..,**-                  .,~-.                                 -=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!-
//                   .,~=;.                  ,~:.            ,--.                 .!#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~.
//                   ..;=:               .  .,,,..          .,~:~,                :$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=,
//                   ..;*~.             .,,,~-.            .. .-:;~,.          ..:$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$,
//                   .,!*~.             .-~:~~~~~-,,..,,.,,--,..,;!;~--,..     .~=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~
//                   ,;=*-              .,~:;;~~*$=!;:!!=**!~,. .-;**!;~,.    .~*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:
//                  ,;$#!,              ..-~;:..~*$$$$$==*!~. ..,,-:!!!:-,   -:$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:.
//            .   .,:$@@!.                -:-.   ,:*=**!:-.    ..,..-;;~-. .-!$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:.
//              ,-:!$@@#~                 .,       .,,-~~,          .~~-,.,:=@@@@@@@@@@@@@@@@@@@@@@@@@@#$@@@@@@@@@@@@@@@@:.
//             .~!$#@@@=,                 .          ..---,.     ..,-~,..,;=@@@@@@@@@@@@@@@@@@@@@@@@@#=!*@@@@@@@@@@@@@@@#~
//        ... .:*#@@@@@$-                 .. .,,,-,,,,,-~::~--~:~:::~-,.,;$@@@@@@@@@@@@@@@@@@@@@@@@@#!-~$@@@@@@@@@@@@@@@$-
//        ...,;=#@@@@@@#:                  ..,~:;***!;::;!!!;;!!!;::----;#@@@@@@@@@@@@@@@@@@@@@@@@@=:,.:$@@@@@@@@@@@@@@#*,
//          .~$@@@@@@@@@*,                 ....,:!*!:~~~~----,-,,-~~--:!$@@@@@@@@@@@@@@@@@@@@@@@@@=~. ,*@@@@@@@@@@@@@@=;:.
//         .,!@@@@@@@@@@=~. .             .,.    ,,,. ..       ..,-~:;*#@@@@@@@@@@@@@@@@@@@@@@@@@=~   ~$@@@@@@@@@@@@@#;..
//         .~$@@@@@@@@@@$;.               ,,,               .,,,.,~!=$@@@@@@@@@@@@@@@@@@@@@@@@@@@;.  .:#@@@@@@@@@@@@@#~
//         ,;#@@@@@@@@@@@*-. .            ,,,. .,,...   .,----,,-;=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~   ,*@@@@@@@@@@@@@@$-
//         -=@@@@@@@@@@@@#*~...           ...  .~;::::::!!;~--:;*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*,   :#@@@@@@@@@@@@@@=.
//       .,;#@@@@@@@@@@@@@#=~.             ..  .~!=$$$$$=!~~:!=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:   ,*@@@@@@@@@@@@@@@!
//        :$@@@@@@@@@@@@@@@#=:,                 ,~!*=$$=*!;!$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=-  .;#@@@@@@@@@@@@@@#:
//       .;@@@@@@@@@@@@@@@@@#*~,.                .-::!**==##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;..,:$@@@@@@@@@@@@@@@$-
//       -*@@@@@@@@@@@@@@@@@@@=!~,            ..,-:!*$#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$:-:*#@@@@@@@@@@@@@@@@=,
//     .,!#@@@@@@@@@@@@@@@@@@@@#$!~,     ..,~:;!*=$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$!!$#@@@@@@@@@@@@@@@@@;
//  .  ,;#@@@@@@@@@@@@@@@@@@@@@@@@$!~---~:;*=$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@#~
//  . .-*@@@@@@@@@@@@@@@@@@@@@@@@@@@#$$$##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*,
//  . .;$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!.
//  . .*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:.
//    ~$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*,
//  .,*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;.
//  .~$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$~
//  .;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.
//  ,!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:
//   -*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!.
//    -!$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=-
//    .-*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:
//     ,~=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#!,
//     ..~=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;,
//       .~*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:,
//         -;*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$:
//          .~!$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*-
//            -:*$#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$:-.
//             .-~;*$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:
//               ..,~*=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;.
//                   ,~!$#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#$*!:.
//                     .-:;==$##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#$*:-.
//                       .,~~~;;!*=$$@@@@@@@@@@@@@@@@@##$$=*!!;;;;!*=$$###@@@@@@@@@@@@@@##$$=*!;:-.
//                            ...,-::;;!!!!!!!!!**!!!;~-,..         ...,,~:;;!!**====*!;;:~-,..
//                                    ....     ......                      ......,,,,...

//                       ***-     -***      !***   ~   !   ,     ***-     -***      !***   ~   !   ,
//                     -@===#$   -#===@~  ,;====@  @  :@  @~   -@===#$   -#===@~  ,;====@  @  :@  @~
//                     @,    .  .@    .   *=    .  @  :@  @~   @,    .  .@    .   *=    .  @  :@  @~
//                    **        @,        @        @  :@  @~  **        @,        @        @  :@  @~
//                    @        ;#        @~        @  :@  @~  @        ;#        @~        @  :@  @~
//                    @        ;#   *##- @~        @  :@  @~  @   ,##= ;#        @~        @  :@  @~
//                    $~       -@.  ~;@~ ;*        @  :@  @~  $~  .;$$ -@.       ;*        @  :@  @~
//                    !=        #-    @~  @.       :   $   -  !=    !$  #-        @.       :   $   -
//                     @$   :*  .@:   @~  *@    $  :   =   -   @$   !$  .@:   $-  *@    $  :   =   -
//                      ;@@@=:    =@@@!,   ,@@@@!  @; :@. @=    ;@@@=:    =@@@!,   ,@@@@!  @; :@. @=
