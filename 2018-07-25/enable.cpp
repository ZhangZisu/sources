#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
typedef long long lnt;
int t;
lnt fib[87] = {1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685, 37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585, 420196140727489673, 679891637638612258, 1100087778366101931};
lnt n, f[87][2];
std::vector<int> v;
int main() {
    // freopen("enable.in", "r", stdin);
    // freopen("enable.out", "w", stdout);
    for (scanf("%d", &t); t; t--) {
        scanf("%lld", &n);
        v.clear();
        memset(f, 0, sizeof(f));
        for (int i = 86; ~i; i--) {
            if (fib[i] <= n) {
                v.push_back(i + 1);
                n -= fib[i];
            }
        }
        std::reverse(v.begin(), v.end());
        f[0][0] = 1;
        f[0][1] = (v.front() - 1) / 2;
        for (int i = 1; i < (int)v.size(); i++) {
            f[i][0] = f[i - 1][0] + f[i - 1][1];
            f[i][1] = (v[i] - v[i - 1] - 1) / 2 * f[i - 1][0] + (v[i] - v[i - 1]) / 2 * f[i - 1][1];
        }
        printf("%lld\n", f[v.size() - 1][0] + f[v.size() - 1][1]);
    }
    return 0;
}